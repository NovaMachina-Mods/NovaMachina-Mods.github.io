"use strict";(self.webpackChunkex_nihilo_sequentia_documentation=self.webpackChunkex_nihilo_sequentia_documentation||[]).push([[9173],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>d});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),u=c(n),f=i,d=u["".concat(l,".").concat(f)]||u[f]||m[f]||a;return n?r.createElement(d,o(o({ref:t},s),{},{components:n})):r.createElement(d,o({ref:t},s))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=f;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[u]="string"==typeof e?e:i,o[1]=p;for(var c=2;c<a;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},8883:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>p,toc:()=>c});var r=n(3117),i=(n(7294),n(3905));const a={},o="Compost Recipe",p={unversionedId:"configuration/CraftTweaker/Recipes/CompostRecipe",id:"version-5.0.0/configuration/CraftTweaker/Recipes/CompostRecipe",title:"Compost Recipe",description:"Method Signature",source:"@site/exn_versioned_docs/version-5.0.0/configuration/CraftTweaker/Recipes/CompostRecipe.md",sourceDirName:"configuration/CraftTweaker/Recipes",slug:"/configuration/CraftTweaker/Recipes/CompostRecipe",permalink:"/exnihilosequentia/configuration/CraftTweaker/Recipes/CompostRecipe",draft:!1,tags:[],version:"5.0.0",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"MeshWithChance",permalink:"/exnihilosequentia/configuration/CraftTweaker/Helpers/MeshWithChance"},next:{title:"Crushing Recipes",permalink:"/exnihilosequentia/configuration/CraftTweaker/Recipes/CrushingRecipe"}},l={},c=[{value:"Method Signature",id:"method-signature",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Constraints",id:"constraints",level:2},{value:"Example",id:"example",level:2}],s={toc:c},u="wrapper";function m(e){let{components:t,...n}=e;return(0,i.kt)(u,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"compost-recipe"},"Compost Recipe"),(0,i.kt)("h2",{id:"method-signature"},"Method Signature"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"addRecipe(String name, IIngredient input, int amount)")),(0,i.kt)("h2",{id:"parameters"},"Parameters"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"name")," - Recipe name",(0,i.kt)("br",{parentName:"p"}),"\n",(0,i.kt)("inlineCode",{parentName:"p"},"input")," - Item to be inserted into barrel for composting",(0,i.kt)("br",{parentName:"p"}),"\n",(0,i.kt)("inlineCode",{parentName:"p"},"amount")," - Amount of solids added to a barrel from the input item"),(0,i.kt)("h2",{id:"constraints"},"Constraints"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"name")," must be globally unique"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"amount")," must be greater than 0")),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'import mods.exnihilosequentia.CompostRecipe;\n\n<recipetype:exnihilosequentia:compost>.addRecipe("example", <item:minecraft:oak_leaves>, 100);\n')))}m.isMDXComponent=!0}}]);