"use strict";(self.webpackChunkex_nihilo_sequentia_documentation=self.webpackChunkex_nihilo_sequentia_documentation||[]).push([[83],{3905:(e,t,a)=>{a.d(t,{Zo:()=>o,kt:()=>s});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),m=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},o=function(e){var t=m(e.components);return n.createElement(d.Provider,{value:t},e.children)},k="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,d=e.parentName,o=p(e,["components","mdxType","originalType","parentName"]),k=m(a),c=r,s=k["".concat(d,".").concat(c)]||k[c]||u[c]||i;return a?n.createElement(s,l(l({ref:t},o),{},{components:a})):n.createElement(s,l({ref:t},o))}));function s(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=c;var p={};for(var d in t)hasOwnProperty.call(t,d)&&(p[d]=t[d]);p.originalType=e,p[k]="string"==typeof e?e:r,l[1]=p;for(var m=2;m<i;m++)l[m]=a[m];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},3259:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>p,toc:()=>m});var n=a(3117),r=(a(7294),a(3905));const i={},l="CraftTweaker Support",p={unversionedId:"configuration/crafttweaker",id:"configuration/crafttweaker",title:"CraftTweaker Support",description:"Ex Nihilo: Sequentia supports CraftTweaker scripts. Be sure to check the [CraftTweaker Documentation] before getting started here to make sure you understand how CraftTweaker works.",source:"@site/docs/configuration/crafttweaker.md",sourceDirName:"configuration",slug:"/configuration/crafttweaker",permalink:"/docs/configuration/crafttweaker",draft:!1,editUrl:"https://github.com/NovaMachina-Mods/NovaMachina-Mods.github.io/blob/main/docs/configuration/crafttweaker.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Configuration File",permalink:"/docs/configuration/"},next:{title:"Data Pack Creation",permalink:"/docs/configuration/data_pack"}},d={},m=[{value:"Compost Recipes",id:"compost-recipes",level:2},{value:"Example",id:"example",level:4},{value:"Crook Recipes",id:"crook-recipes",level:2},{value:"Example",id:"example-1",level:4},{value:"Crucible Recipes",id:"crucible-recipes",level:2},{value:"Example",id:"example-2",level:4},{value:"Fluid Item Recipes",id:"fluid-item-recipes",level:2},{value:"Example",id:"example-3",level:4},{value:"Fluid On Top Recipes",id:"fluid-on-top-recipes",level:2},{value:"Example",id:"example-4",level:4},{value:"Fluid Transform Recipes",id:"fluid-transform-recipes",level:2},{value:"Example",id:"example-5",level:4},{value:"Hammer Recipes",id:"hammer-recipes",level:2},{value:"Example",id:"example-6",level:4},{value:"Heat Recipes",id:"heat-recipes",level:2},{value:"Example",id:"example-7",level:4},{value:"Sieve Recipes",id:"sieve-recipes",level:2},{value:"Example",id:"example-8",level:4}],o={toc:m},k="wrapper";function u(e){let{components:t,...a}=e;return(0,r.kt)(k,(0,n.Z)({},o,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"crafttweaker-support"},"CraftTweaker Support"),(0,r.kt)("p",null,"Ex Nihilo: Sequentia supports CraftTweaker scripts. Be sure to check the ",(0,r.kt)("a",{parentName:"p",href:"https://docs.blamejared.com/"},"CraftTweaker Documentation")," before getting started here to make sure you understand how CraftTweaker works."),(0,r.kt)("p",null,"All Ex Nihilo: Sequentia recipes follow a builder pattern, so ordering is not important as long as all the required methods are there."),(0,r.kt)("h2",{id:"compost-recipes"},"Compost Recipes"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Method"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Accepted Values"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Required"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"create(String name)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The name of the recipe."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Unique String. Must be first."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Required")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"setInput(IIngredient input)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Item to be inserted into barrel for composting."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Item or Tag."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Required")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"setAmount(int amount)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Amount of solids added to a barrel from the item."),(0,r.kt)("td",{parentName:"tr",align:"left"},"A value greater than 0."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Required")))),(0,r.kt)("h4",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'import mods.exnihilosequentia.ZenCompostRecipe;\n\n<recipetype:exnihilosequentia:compost>\n    .create("example")\n    .setInput(<item:minecraft:oak_leaves>)\n    .setAmount(100);\n')),(0,r.kt)("h2",{id:"crook-recipes"},"Crook Recipes"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Method"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Accepted Values"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Required"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"create(String name)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The name of the recipe."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Must be a unique name. Must be first."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Required")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"setInput(IIngredient input)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Block to be crooked."),(0,r.kt)("td",{parentName:"tr",align:"left"},"May be a block or a tag."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Required")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"addDrop(IItemStack drop, float chance)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The item to drop and its chance. May be called multiple times to add more drops."),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("ol",null,(0,r.kt)("li",null,"Item")," ",(0,r.kt)("li",null,"Value between 0.0 and 1.0"))),(0,r.kt)("td",{parentName:"tr",align:"left"})))),(0,r.kt)("h4",{id:"example-1"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'import mods.exnihilosequentia.ZenCrookRecipe;\n\n<recipetype:exnihilosequentia:crook>\n    .create("example")\n    .setInput(<item:minecraft:oak_leaves>)\n    .addDrop(<item:exnihilosequentia:silkworm>, 1)\n    .addDrop(<item:minecraft:diamond>, 2);\n')),(0,r.kt)("h2",{id:"crucible-recipes"},"Crucible Recipes"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Method"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Accepted Values"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Required"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"create(String name)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The name of the recipe."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Unique String. Must be first."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Required")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"setInput(IIngredient input)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Block or type to be melted down"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Item or Tag"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Required")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"setAmount(int amount)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Amount of fluid produced by an input block."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Value greater than 0."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"setCrucibleType(String crucibleType)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Type of crucible. ",(0,r.kt)("inlineCode",{parentName:"td"},"wood")," recipies can be processed by ",(0,r.kt)("inlineCode",{parentName:"td"},"fired")," crucibles, but not the other way around."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Must be ",(0,r.kt)("inlineCode",{parentName:"td"},"wood")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"fired"),". Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"wood"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"setResultFluid(IFluidStack fluid)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Resulting fluid."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Fluid"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Required")))),(0,r.kt)("h4",{id:"example-2"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'import mods.exnihilosequentia.ZenCrucibleRecipe;\n\n<recipetype:exnihilosequentia:crucible>\n    .create("example")\n    .setInput(<item:minecraft:cobblestone>)\n    .setAmount(100)\n    .setCrucibleType("fired")\n    .setResutFluid(<fluid:minecraft:lava>);\n')),(0,r.kt)("h2",{id:"fluid-item-recipes"},"Fluid Item Recipes"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Method"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Accepted Values"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Required"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"create(String name)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The name of the recipe."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Unique String. Must be first."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Required")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"setFluidInTank(IFluidStack fluidInTank)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Fluid in the tank"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Fluid"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Required")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"setInputItem(IIngredient inputItem)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Item that acts as a catalyst to complete recipe."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Item or Tag."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Required")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"setResult(IItemStack result)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Resulting item."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Item"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Required")))),(0,r.kt)("h4",{id:"example-3"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'import mods.exnihilosequentia.ZenFluidItemRecipe;\n\n<recipetype:exnihilosequentia:fluid_item>\n    .create("example")\n    .setFluidInTank(<fluid:minecraft:water>)\n    .setInputItem(<item:minecraft:diamond>)\n    .setResult(<item:minecraft:dirt>);\n')),(0,r.kt)("h2",{id:"fluid-on-top-recipes"},"Fluid On Top Recipes"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Method"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Accepted Values"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Required"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"create(String name)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The name of the recipe."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Unique String. Must be first."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Required")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"setFluidInTank(IFluidStack fluidInTank)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Fluid in the tank"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Fluid"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Required")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"setFluidOnTop(IFluidStack fluidOnTop)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Fluid placed on top."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Fluid"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Required")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"setResult(IItemStack result)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Resulting item."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Block"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Required")))),(0,r.kt)("h4",{id:"example-4"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'import mods.exnihilosequentia.ZenFluidOnTopRecipe;\n\n<recipetype:exnihilosequentia:fluid_on_top>\n    .create("example")\n    .setFluidInTank(<fluid:minecraft:lava>)\n    .setFluidOnTop(<fluid:minecraft:water>)\n    .setResult(<item:minecraft:obsidian>);\n')),(0,r.kt)("h2",{id:"fluid-transform-recipes"},"Fluid Transform Recipes"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Method"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Accepted Values"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Required"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"create(String name)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The name of the recipe."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Unique String. Must be first."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Required")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"setFluidInTank(IFluidStack fluidInTank)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Fluid in the tank"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Fluid"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Required")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"setCatalyst(IIngredient catalyst)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Block to be placed below or item to be inserted."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Item or Tag"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Required")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"setResult(IFluidStack result)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Resulting fluid."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Fluid"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Required")))),(0,r.kt)("h4",{id:"example-5"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'import mods.exnihilosequentia.ZenFluidTransformRecipe;\n\n<recipetype:exnihilosequentia:fluid_transform>\n    .create("example")\n    .setFluidInTank(<fluid:minecraft:lava>)\n    .setCatalyst(<item:minecraft:diamond>)\n    .setResult(<fluid:minecraft:water>);\n')),(0,r.kt)("h2",{id:"hammer-recipes"},"Hammer Recipes"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Method"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Accepted Values"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Required"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"create(String name)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The name of the recipe."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Unique String. Must be first."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Required")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"setInput(IIngredient input)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Block to be hammerd."),(0,r.kt)("td",{parentName:"tr",align:"left"},"May be a block to tag."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Required")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"addOutput(IItemStack drop)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The item to drop 100% of the time. May be called multiple times to add more drops."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Item"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"addOutput(IItemStack drop, float chance)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The item to drop and its chance. May be called multiple times to add more drops."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Item"),(0,r.kt)("td",{parentName:"tr",align:"left"})))),(0,r.kt)("h4",{id:"example-6"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'import mods.exnihilosequentia.ZenHammerRecipe;\n\n<recipetype:exnihilosequentia:hammer>\n    .create("example")\n    .setInput(<item:minecraft:cobblestone>)\n    .addOutput(<item:minecraft:gravel>)\n    .addOutput(<item:minecraft:diamond>, 0.01);\n')),(0,r.kt)("h2",{id:"heat-recipes"},"Heat Recipes"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Method"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Accepted Values"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Required"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"create(String name)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The name of the recipe."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Unique String. Must be first."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Required")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"setBlock(MCBlock input)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Block to add as a heat source."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Block"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Required")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"setAmount(int amount)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Heating amount."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Value greater than 0."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Required")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"setProperties(StatePropertiesPredicate properties)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A collection of block state properties. (See ",(0,r.kt)("a",{parentName:"td",href:"https://docs.blamejared.com/1.16/en/vanilla/api/predicate/StatePropertiesPredicate"},"StatePropertiesPredicate"),")"),(0,r.kt)("td",{parentName:"tr",align:"left"},"StatePropertiesPredicate"),(0,r.kt)("td",{parentName:"tr",align:"left"})))),(0,r.kt)("h4",{id:"example-7"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'import mods.exnihilosequentia.ZenHeatRecipe;\n\nproperties = StatePropertiesPredicate.withExactProperty("lit", true);\n\n<recipetype:exnihilosequentia:heat>\n    .create("example")\n    .setBlock(<block:minecraft:campfire>)\n    .setAmount(100)\n    .setProperties(properties);\n')),(0,r.kt)("h2",{id:"sieve-recipes"},"Sieve Recipes"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Method"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Accepted Values"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Required"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"create(String name)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The name of the recipe."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Unique String. Must be first."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Required")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"setInput(IIngredient input)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Block to be sieved."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Block or Tag"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Required")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"addDrop(IItemStack drop)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Item to be dropped in this recipe."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Item"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Required")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"addRoll(String mesh, float chance)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A mesh and its associated drop chance for the above drop. May be called multiple times to add more rolls."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Mesh must be ",(0,r.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"flint"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"iron"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"diamond"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"emerald"),", or ",(0,r.kt)("inlineCode",{parentName:"td"},"netherite"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"setWaterlogged()")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Sets the recipe to require a waterlogged sieve."),(0,r.kt)("td",{parentName:"tr",align:"left"},"N/A"),(0,r.kt)("td",{parentName:"tr",align:"left"})))),(0,r.kt)("h4",{id:"example-8"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'import mods.exnihilosequentia.ZenSieveRecipe;\n\n<recipetype:exnihilosequentia:sieve>\n    .create("example")\n    .setInput(<item:minecraft:cobblestone>)\n    .addDrop(<item:minecraft:netherite_ingot>)\n    .addRoll("diamond", 0.01)\n    .addRoll("string", 1.0)\n    .setWaterlogged();\n')))}u.isMDXComponent=!0}}]);