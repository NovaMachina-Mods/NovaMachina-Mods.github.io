"use strict";(self.webpackChunkex_nihilo_sequentia_documentation=self.webpackChunkex_nihilo_sequentia_documentation||[]).push([[8931],{3905:(t,e,a)=>{a.d(e,{Zo:()=>m,kt:()=>s});var n=a(7294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var p=n.createContext({}),d=function(t){var e=n.useContext(p),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},m=function(t){var e=d(t.components);return n.createElement(p.Provider,{value:e},t.children)},k="mdxType",u={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},c=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,p=t.parentName,m=o(t,["components","mdxType","originalType","parentName"]),k=d(a),c=r,s=k["".concat(p,".").concat(c)]||k[c]||u[c]||l;return a?n.createElement(s,i(i({ref:e},m),{},{components:a})):n.createElement(s,i({ref:e},m))}));function s(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=c;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=t,o[k]="string"==typeof t?t:r,i[1]=o;for(var d=2;d<l;d++)i[d]=a[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},8577:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>d});var n=a(3117),r=(a(7294),a(3905));const l={},i="Data Pack Creation",o={unversionedId:"configuration/data_pack",id:"version-4.2.0/configuration/data_pack",title:"Data Pack Creation",description:"Ex Nihilo: Sequentia supports datapacks for the creation of recipes. Defined below are the templates for the recipes that are supported.",source:"@site/exn_versioned_docs/version-4.2.0/configuration/data_pack.md",sourceDirName:"configuration",slug:"/configuration/data_pack",permalink:"/exnihilosequentia/4.2.0/configuration/data_pack",draft:!1,tags:[],version:"4.2.0",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"CraftTweaker Support",permalink:"/exnihilosequentia/4.2.0/configuration/crafttweaker"},next:{title:"KubeJS",permalink:"/exnihilosequentia/4.2.0/configuration/kubejs"}},p={},d=[{value:"Compost",id:"compost",level:2},{value:"Crook",id:"crook",level:2},{value:"Crucible",id:"crucible",level:2},{value:"Fluid Item Transformation",id:"fluid-item-transformation",level:2},{value:"Fluid On Top",id:"fluid-on-top",level:2},{value:"Fluid Transformation",id:"fluid-transformation",level:2},{value:"Hammer",id:"hammer",level:2},{value:"Heat",id:"heat",level:2},{value:"Sieve",id:"sieve",level:2}],m={toc:d},k="wrapper";function u(t){let{components:e,...a}=t;return(0,r.kt)(k,(0,n.Z)({},m,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"data-pack-creation"},"Data Pack Creation"),(0,r.kt)("p",null,"Ex Nihilo: Sequentia supports datapacks for the creation of recipes. Defined below are the templates for the recipes that are supported."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Anywhere that ",(0,r.kt)("inlineCode",{parentName:"p"},"item/tag")," shows up means that you must use ",(0,r.kt)("inlineCode",{parentName:"p"},"item")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"tag"),", not ",(0,r.kt)("inlineCode",{parentName:"p"},"item/tag"),".")),(0,r.kt)("h2",{id:"compost"},"Compost"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Compost Recipe"',title:'"Compost','Recipe"':!0},'{\n  "type": "exnihilosequentia:compost",\n  "input": {\n    "item/tag": "minecraft:apple"\n  },\n  "amount": 100\n}\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Value"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Accepted Values"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"input")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The item/block being inserted into a barrel to be composted."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Item or Tag")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"amount")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The amount an item/block contributes to the solid amount in a barrel."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Value greater than 0")))),(0,r.kt)("h2",{id:"crook"},"Crook"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Crook Recipe"',title:'"Crook','Recipe"':!0},'{\n  "type": "exnihilosequentia:crook",\n  "results": [\n    {\n      "chance": 0.1,\n      "item": "exnihilosequentia:silkworm",\n      "count": 1\n    },\n    ...\n  ],\n  "input": {\n    "item/tag": "minecraft:leaves"\n\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Result Object"',title:'"Result','Object"':!0},'{\n  "chance": 0.1,\n  "item": "exnihilosequentia:silkworm",\n  "count": 1\n}\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Value"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Accepted Values"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"results")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A list of items that can be dropped and the chance that they will be."),(0,r.kt)("td",{parentName:"tr",align:"left"},"List of Result Objects")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"chance")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Percentage that this recipe will produce drop."),(0,r.kt)("td",{parentName:"tr",align:"left"},"A value from 0.0 to 1.0.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"item")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The item to be dropped."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Item")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"count")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Number of result items to drop when recipe completes."),(0,r.kt)("td",{parentName:"tr",align:"left"},"A value greater than 0.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"input")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The block/type of block that must be broken by a crook to produce the results."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Block or Tag")))),(0,r.kt)("h2",{id:"crucible"},"Crucible"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Crucible Recipe"',title:'"Crucible','Recipe"':!0},'{\n  "type": "exnihilosequentia:crucible",\n  "input": {\n    "item/tag": "minecraft:cobblestone"\n  },\n  "amount": 250,\n  "fluidResult": {\n    "fluid": "minecraft:lava"\n  },\n  "crucibleType": "fired"\n}\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Value"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Accepted Values"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"input")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The block/type of block to be placed in a crucible to produce the connected fluid."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Item or Tag")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"amount")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The amount of fluid that will be produced by the input (represented in millibuckets)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A value greater than 0.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"fluidResult")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The fluid that results from the input."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Fluid")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"crucibleType")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Type of crucible. ",(0,r.kt)("inlineCode",{parentName:"td"},"wood")," crucible recipies can be processed by ",(0,r.kt)("inlineCode",{parentName:"td"},"fired")," crucibles, but not the other way around."),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("ul",null,(0,r.kt)("li",null,(0,r.kt)("inlineCode",{parentName:"td"},"fired")),(0,r.kt)("li",null,(0,r.kt)("inlineCode",{parentName:"td"},"wood"))))))),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Since ",(0,r.kt)("inlineCode",{parentName:"p"},"wood")," crucible recipies can be processed in ",(0,r.kt)("inlineCode",{parentName:"p"},"fired")," crucibles, there is no need to create two separate recipies for ",(0,r.kt)("inlineCode",{parentName:"p"},"wood")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"fired")," recipies that result in the same fluid and amount.")),(0,r.kt)("h2",{id:"fluid-item-transformation"},"Fluid Item Transformation"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Fluid Item Transformation"',title:'"Fluid',Item:!0,'Transformation"':!0},'{\n  "type": "exnihilosequentia:fluid_item",\n  "fluid": {\n    "fluid": "exnihilosequentia:sea_water"\n  },\n  "input": {\n    "item/tag": "exnihilosequentia:seed_pink_coral"\n  },\n  "result": {\n    "item": "minecraft:brain_coral_block"\n  }\n}\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Value"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Accepted Values"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"fluid")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The fluid in the barrel."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Fluid")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"input")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The item or type of item to be consumed by the recipe."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Item or Tag")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"result")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The resulting item/block."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Item")))),(0,r.kt)("h2",{id:"fluid-on-top"},"Fluid On Top"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Fluid On Top Recipe"',title:'"Fluid',On:!0,Top:!0,'Recipe"':!0},'{\n  "type": "exnihilosequentia:fluid_on_top",\n  "fluidInTank": {\n    "fluid": "minecraft:water"\n  },\n  "fluidOnTop": {\n    "fluid": "minecraft:lava"\n  },\n  "result": {\n    "item": "minecraft:cobblestone"\n  }\n}\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Value"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Accepted Values"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"fluidInTank")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The fluid in the tank that will be consumed."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Fluid")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"fluidOnTop")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The fluid that will be placed on top of the barrel that will not be consumed."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Fluid")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"result")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The resulting block."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Block")))),(0,r.kt)("h2",{id:"fluid-transformation"},"Fluid Transformation"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Fluid Transformation Recipe"',title:'"Fluid',Transformation:!0,'Recipe"':!0},'{\n  "type": "exnihilosequentia:fluid_transform",\n  "fluidInTank": {\n    "fluid": "minecraft:water"\n  },\n  "catalyst": {\n    "item/tag": "minecraft:sand"\n  },\n  "result": {\n    "fluid": "exnihilosequentia:sea_water"\n  }\n}\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Value"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Accepted Values"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"fluidInTank")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The fluid to be transformed."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Fluid")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"catalyst")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The block/type of block that must be below the barrel to transform the fluid. May also be an item that is inserted into the barrel with the fluid in it."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Item or Tag")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"result")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The resulting fluid."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Fluid")))),(0,r.kt)("h2",{id:"hammer"},"Hammer"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Hammer Recipe"',title:'"Hammer','Recipe"':!0},'{\n  "type": "exnihilosequentia:hammer",\n  "results": [\n    {\n      "item": "minecraft:sand",\n      "chance": 1.0,\n      "count": 1\n    }\n  ],\n  "input": {\n    "item": "minecraft:gravel"\n  }\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Result Object"',title:'"Result','Object"':!0},'{\n  "item": "minecraft:sand",\n  "chance": 1.0,\n  "count": 1\n}\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Value"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Accepted Values"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"results")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A list of possible drops."),(0,r.kt)("td",{parentName:"tr",align:"left"},"List of Result Objects")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"item")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The item to be dropped."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Item")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"chance")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The resulting fluid."),(0,r.kt)("td",{parentName:"tr",align:"left"},"A value from 0.0 to 1.0.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"count")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Number of result items dropped when recipe completes"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A value greater than 0.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"input")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The block to be hammered."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Block or Tag")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"result")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The resulting block."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Block")))),(0,r.kt)("h2",{id:"heat"},"Heat"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Heat Recipe"',title:'"Heat','Recipe"':!0},'{\n  "type": "exnihilosequentia:heat",\n  "block": "minecraft:campfire",\n  "amount": 4,\n  "state": {\n    "lit": "true"\n  }\n}\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Value"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Accepted Values"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"block")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The block placed below a crucible that will generate heat."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Block")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"amount")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The number of millibuckets that will be melted down per operation."),(0,r.kt)("td",{parentName:"tr",align:"left"},"A value greater than 0.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"state")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A collection of properties that the block must match for the heat recipe to be valid. Optional and may be omitted. (See ",(0,r.kt)("a",{parentName:"td",href:"https://minecraft.fandom.com/wiki/Block_states"},"Block States")," on the Minecraft Wiki)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Block State")))),(0,r.kt)("h2",{id:"sieve"},"Sieve"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Sieve Recipe"',title:'"Sieve','Recipe"':!0},'{\n  "type": "exnihilosequentia:sieve",\n  "rolls": [\n    {\n      "chance": 1.0,\n      "mesh": "string"\n    }\n  ],\n  "input": {\n    "item/tag": "minecraft:dirt"\n  },\n  "result": {\n    "item": "exnihilosequentia:pebble_stone"\n  },\n  "waterlogged": true\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Mesh Roll"',title:'"Mesh','Roll"':!0},'{\n  "chance": 1.0,\n  "mesh": "string"\n}\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Value"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Accepted Values"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"rolls")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A list of rolls for this recipe."),(0,r.kt)("td",{parentName:"tr",align:"left"},"A list of Mesh Rolls")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"chance")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Chance that this recipe completes."),(0,r.kt)("td",{parentName:"tr",align:"left"},"A value from 0.0 to 1.0.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"mesh")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The mesh required to cause this roll to be considered."),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("ul",null,(0,r.kt)("li",null,(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("li",null,(0,r.kt)("inlineCode",{parentName:"td"},"flint")),(0,r.kt)("li",null,(0,r.kt)("inlineCode",{parentName:"td"},"iron")),(0,r.kt)("li",null,(0,r.kt)("inlineCode",{parentName:"td"},"diamond")),(0,r.kt)("li",null,(0,r.kt)("inlineCode",{parentName:"td"},"emerald")),(0,r.kt)("li",null,(0,r.kt)("inlineCode",{parentName:"td"},"netherite"))))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"input")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The block/type of block that will be consumed by the sieve."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Block or Tag")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"result")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The resulting item."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Item")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"waterlogged")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The sieve must be placed in water to produce result."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Either ",(0,r.kt)("inlineCode",{parentName:"td"},"true")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),". Optional and enitire tag may be omitted. Will default to ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),".")))))}u.isMDXComponent=!0}}]);