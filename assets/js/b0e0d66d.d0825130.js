"use strict";(self.webpackChunkex_nihilo_sequentia_documentation=self.webpackChunkex_nihilo_sequentia_documentation||[]).push([[8558],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},d="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(n),f=a,m=d["".concat(c,".").concat(f)]||d[f]||s[f]||i;return n?r.createElement(m,o(o({ref:t},u),{},{components:n})):r.createElement(m,o({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=f;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[d]="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},9081:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>s,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=n(3117),a=(n(7294),n(3905));const i={},o="Melting Recipes",l={unversionedId:"configuration/Data Pack/Recipes/MeltingRecipe",id:"version-5.0.0/configuration/Data Pack/Recipes/MeltingRecipe",title:"Melting Recipes",description:"Structure",source:"@site/exn_versioned_docs/version-5.0.0/configuration/Data Pack/Recipes/MeltingRecipe.md",sourceDirName:"configuration/Data Pack/Recipes",slug:"/configuration/Data Pack/Recipes/MeltingRecipe",permalink:"/exnihilosequentia/configuration/Data Pack/Recipes/MeltingRecipe",draft:!1,tags:[],version:"5.0.0",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Heat Recipe",permalink:"/exnihilosequentia/configuration/Data Pack/Recipes/HeatRecipe"},next:{title:"Precipitate Recipe",permalink:"/exnihilosequentia/configuration/Data Pack/Recipes/PrecipitateRecipe"}},c={},p=[{value:"Structure",id:"structure",level:2},{value:"Fields",id:"fields",level:2}],u={toc:p},d="wrapper";function s(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"melting-recipes"},"Melting Recipes"),(0,a.kt)("h2",{id:"structure"},"Structure"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "type": "exnihilosequentia:melting",\n  "input": {\n    "item/tag": "string"\n  },\n  "fluidResult": {\n    "amount": "number",\n    "fluid": "string"\n  },\n  "crucibleType": "string"\n}\n')),(0,a.kt)("h2",{id:"fields"},"Fields"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Value"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Accepted Values"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"input")),(0,a.kt)("td",{parentName:"tr",align:"left"},"The block/type of block to be placed in a crucible to produce the connected fluid."),(0,a.kt)("td",{parentName:"tr",align:"left"},"Item or Tag")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"amount")),(0,a.kt)("td",{parentName:"tr",align:"left"},"The amount of fluid that will be produced by the input (represented in millibuckets)"),(0,a.kt)("td",{parentName:"tr",align:"left"},"A value greater than 0.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"fluidResult")),(0,a.kt)("td",{parentName:"tr",align:"left"},"The fluid that results from the input."),(0,a.kt)("td",{parentName:"tr",align:"left"},"Fluid")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"crucibleType")),(0,a.kt)("td",{parentName:"tr",align:"left"},"Type of crucible. ",(0,a.kt)("inlineCode",{parentName:"td"},"wood")," crucible recipies can be processed by ",(0,a.kt)("inlineCode",{parentName:"td"},"fired")," crucibles, but not the other way around."),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("inlineCode",{parentName:"td"},"fired")),(0,a.kt)("li",null,(0,a.kt)("inlineCode",{parentName:"td"},"wood"))))))),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Since ",(0,a.kt)("inlineCode",{parentName:"p"},"wood")," crucible recipies can be processed in ",(0,a.kt)("inlineCode",{parentName:"p"},"fired")," crucibles, there is no need to create two separate recipies for ",(0,a.kt)("inlineCode",{parentName:"p"},"wood")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"fired")," recipies that result in the same fluid and amount.")))}s.isMDXComponent=!0}}]);